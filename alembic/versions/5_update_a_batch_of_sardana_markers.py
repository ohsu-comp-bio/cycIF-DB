"""Update a batch of sardana markers

Revision ID: 5
Revises: 4
Create Date: 2021-02-03 23:20:37.475042

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5'
down_revision = '4'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('cells', sa.Column('alpha_sma_660__cell_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('alpha_sma_660__nuclei_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('cd163_488__cell_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('cd163_488__nuclei_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('cd20_488__cell_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('cd20_488__nuclei_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('cd31_647__cell_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('cd31_647__nuclei_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('cd4_488__cell_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('cd4_488__nuclei_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('cd68_555__cell_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('cd68_555__nuclei_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('cd8a_660__cell_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('cd8a_660__nuclei_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('cdx2_647__cell_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('cdx2_647__nuclei_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('col_iv_647__cell_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('col_iv_647__nuclei_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('desmin_555__cell_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('desmin_555__nuclei_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('desmin__cell_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('desmin__nuclei_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('e_cadherin_488__cell_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('e_cadherin_488__nuclei_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('foxp3_570__cell_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('foxp3_570__nuclei_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('hoechst_0__cell_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('hoechst_0__nuclei_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('hoechst_1__cell_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('hoechst_1__nuclei_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('hoechst_2__cell_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('hoechst_2__nuclei_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('hoechst_3__cell_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('hoechst_3__nuclei_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('hoechst_4__cell_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('hoechst_4__nuclei_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('hoechst_5__cell_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('hoechst_5__nuclei_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('hoechst_6__cell_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('hoechst_6__nuclei_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('hoechst_7__cell_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('hoechst_7__nuclei_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('hoechst_8__cell_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('hoechst_8__nuclei_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('hoechst_9__cell_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('hoechst_9__nuclei_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('ki67_488__cell_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('ki67_488__nuclei_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('ki67_570__cell_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('ki67_570__nuclei_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('laminabc_488__cell_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('laminabc_488__nuclei_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('nakatpase__cell_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('nakatpase__nuclei_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('pcna_488__cell_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('pcna_488__nuclei_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('pd1_647__cell_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('pd1_647__nuclei_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('pdl1_647__cell_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('pdl1_647__nuclei_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('vimentin_555__cell_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.add_column('cells', sa.Column('vimentin_555__nuclei_masks', sa.Numeric(precision=15, scale=4), nullable=True))
    op.drop_column('cells', 'asma__nuclei_masks')
    op.drop_column('cells', 'asma__cell_masks')
    op.drop_column('cells', 'ecad__nuclei_masks')
    op.drop_column('cells', 'ecad__cell_masks')
    # ### end Alembic commands ###

    op.alter_column('cells', 'nfkb_(p65)__nuclei_masks', new_column_name='nfkb_p65__nuclei_masks')
    op.alter_column('cells', 'nfkb_(p65)__cell_masks', new_column_name='nfkb_p65__cell_masks')
    op.alter_column('cells', 'lamac__nuclei_masks', new_column_name='laminac__nuclei_masks')
    op.alter_column('cells', 'lamac__cell_masks', new_column_name='laminac__cell_masks')
    op.alter_column('cells', 'lamb1__cell_masks', new_column_name='laminb1__cell_masks')
    op.alter_column('cells', 'lamb1__nuclei_masks', new_column_name='laminb1__nuclei_masks')
    op.alter_column('cells', 'lamin_b2__cell_masks', new_column_name='laminb2__cell_masks')
    op.alter_column('cells', 'lamin_b2__nuclei_masks', new_column_name='laminb2__nuclei_masks')
    op.alter_column('cells', 'eomes_(tbr2)__nuclei_masks', new_column_name='eomes__nuclei_masks')
    op.alter_column('cells', 'eomes_(tbr2)__cell_masks', new_column_name='eomes__cell_masks')
    op.alter_column('cells', 'vegfr1_flt1__nuclei_masks', new_column_name='vegfr1__nuclei_masks')
    op.alter_column('cells', 'vegfr1_flt1__cell_masks', new_column_name='vegfr1__cell_masks')
    op.alter_column('cells', 'pd_l1__cell_masks', new_column_name='pdl1__cell_masks')
    op.alter_column('cells', 'pd_l1__nuclei_masks', new_column_name='pdl1__nuclei_masks')
    op.alter_column('cells', 'ras_(k_h_n)__cell_masks', new_column_name='ras_khn__cell_masks')
    op.alter_column('cells', 'ras_(k_h_n)__nuclei_masks', new_column_name='ras_khn__nuclei_masks')


def downgrade():
    op.alter_column('cells', 'ras_khn__nuclei_masks', new_column_name='ras_(k_h_n)__nuclei_masks')
    op.alter_column('cells', 'ras_khn__cell_masks', new_column_name='ras_(k_h_n)__cell_masks')
    op.alter_column('cells', 'pdl1__nuclei_masks', new_column_name='pd_l1__nuclei_masks')
    op.alter_column('cells', 'pdl1__cell_masks', new_column_name='pd_l1__cell_masks')
    op.alter_column('cells', 'vegfr1__cell_masks', new_column_name='vegfr1_flt1__cell_masks')
    op.alter_column('cells', 'vegfr1__nuclei_masks', new_column_name='vegfr1_flt1__nuclei_masks')
    op.alter_column('cells', 'eomes__cell_masks', new_column_name='eomes_(tbr2)__cell_masks')
    op.alter_column('cells', 'eomes__nuclei_masks', new_column_name='eomes_(tbr2)__nuclei_masks')
    op.alter_column('cells', 'laminb2__nuclei_masks', new_column_name='lamin_b2__nuclei_masks')
    op.alter_column('cells', 'laminb2__cell_masks', new_column_name='lamin_b2__cell_masks')
    op.alter_column('cells', 'laminb1__nuclei_masks', new_column_name='lamb1__nuclei_masks')
    op.alter_column('cells', 'laminb1__cell_masks', new_column_name='lamb1__cell_masks')
    op.alter_column('cells', 'laminac__cell_masks', new_column_name='lamac__cell_masks')
    op.alter_column('cells', 'laminac__nuclei_masks', new_column_name='lamac__nuclei_masks')
    op.alter_column('cells', 'nfkb_p65__cell_masks', new_column_name='nfkb_(p65)__cell_masks')
    op.alter_column('cells', 'nfkb_p65__nuclei_masks', new_column_name='nfkb_(p65)__nuclei_masks')

    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('cells', sa.Column('ecad__cell_masks', sa.NUMERIC(precision=15, scale=4), autoincrement=False, nullable=True))
    op.add_column('cells', sa.Column('ecad__nuclei_masks', sa.NUMERIC(precision=15, scale=4), autoincrement=False, nullable=True))
    op.add_column('cells', sa.Column('asma__cell_masks', sa.NUMERIC(precision=15, scale=4), autoincrement=False, nullable=True))
    op.add_column('cells', sa.Column('asma__nuclei_masks', sa.NUMERIC(precision=15, scale=4), autoincrement=False, nullable=True))
    op.drop_column('cells', 'vimentin_555__nuclei_masks')
    op.drop_column('cells', 'vimentin_555__cell_masks')
    op.drop_column('cells', 'pdl1_647__nuclei_masks')
    op.drop_column('cells', 'pdl1_647__cell_masks')
    op.drop_column('cells', 'pd1_647__nuclei_masks')
    op.drop_column('cells', 'pd1_647__cell_masks')
    op.drop_column('cells', 'pcna_488__nuclei_masks')
    op.drop_column('cells', 'pcna_488__cell_masks')
    op.drop_column('cells', 'nakatpase__nuclei_masks')
    op.drop_column('cells', 'nakatpase__cell_masks')
    op.drop_column('cells', 'laminabc_488__nuclei_masks')
    op.drop_column('cells', 'laminabc_488__cell_masks')
    op.drop_column('cells', 'ki67_570__nuclei_masks')
    op.drop_column('cells', 'ki67_570__cell_masks')
    op.drop_column('cells', 'ki67_488__nuclei_masks')
    op.drop_column('cells', 'ki67_488__cell_masks')
    op.drop_column('cells', 'hoechst_9__nuclei_masks')
    op.drop_column('cells', 'hoechst_9__cell_masks')
    op.drop_column('cells', 'hoechst_8__nuclei_masks')
    op.drop_column('cells', 'hoechst_8__cell_masks')
    op.drop_column('cells', 'hoechst_7__nuclei_masks')
    op.drop_column('cells', 'hoechst_7__cell_masks')
    op.drop_column('cells', 'hoechst_6__nuclei_masks')
    op.drop_column('cells', 'hoechst_6__cell_masks')
    op.drop_column('cells', 'hoechst_5__nuclei_masks')
    op.drop_column('cells', 'hoechst_5__cell_masks')
    op.drop_column('cells', 'hoechst_4__nuclei_masks')
    op.drop_column('cells', 'hoechst_4__cell_masks')
    op.drop_column('cells', 'hoechst_3__nuclei_masks')
    op.drop_column('cells', 'hoechst_3__cell_masks')
    op.drop_column('cells', 'hoechst_2__nuclei_masks')
    op.drop_column('cells', 'hoechst_2__cell_masks')
    op.drop_column('cells', 'hoechst_1__nuclei_masks')
    op.drop_column('cells', 'hoechst_1__cell_masks')
    op.drop_column('cells', 'hoechst_0__nuclei_masks')
    op.drop_column('cells', 'hoechst_0__cell_masks')
    op.drop_column('cells', 'foxp3_570__nuclei_masks')
    op.drop_column('cells', 'foxp3_570__cell_masks')
    op.drop_column('cells', 'e_cadherin_488__nuclei_masks')
    op.drop_column('cells', 'e_cadherin_488__cell_masks')
    op.drop_column('cells', 'desmin__nuclei_masks')
    op.drop_column('cells', 'desmin__cell_masks')
    op.drop_column('cells', 'desmin_555__nuclei_masks')
    op.drop_column('cells', 'desmin_555__cell_masks')
    op.drop_column('cells', 'col_iv_647__nuclei_masks')
    op.drop_column('cells', 'col_iv_647__cell_masks')
    op.drop_column('cells', 'cdx2_647__nuclei_masks')
    op.drop_column('cells', 'cdx2_647__cell_masks')
    op.drop_column('cells', 'cd8a_660__nuclei_masks')
    op.drop_column('cells', 'cd8a_660__cell_masks')
    op.drop_column('cells', 'cd68_555__nuclei_masks')
    op.drop_column('cells', 'cd68_555__cell_masks')
    op.drop_column('cells', 'cd4_488__nuclei_masks')
    op.drop_column('cells', 'cd4_488__cell_masks')
    op.drop_column('cells', 'cd31_647__nuclei_masks')
    op.drop_column('cells', 'cd31_647__cell_masks')
    op.drop_column('cells', 'cd20_488__nuclei_masks')
    op.drop_column('cells', 'cd20_488__cell_masks')
    op.drop_column('cells', 'cd163_488__nuclei_masks')
    op.drop_column('cells', 'cd163_488__cell_masks')
    op.drop_column('cells', 'alpha_sma_660__nuclei_masks')
    op.drop_column('cells', 'alpha_sma_660__cell_masks')
    # ### end Alembic commands ###
